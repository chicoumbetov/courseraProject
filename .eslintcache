[{"D:\\ReactProject\\coursera\\src\\index.js":"1","D:\\ReactProject\\coursera\\src\\App.js":"2","D:\\ReactProject\\coursera\\src\\reportWebVitals.js":"3","D:\\ReactProject\\coursera\\src\\components\\MenuComponent.js":"4","D:\\ReactProject\\coursera\\src\\shared\\dishes.js":"5","D:\\ReactProject\\coursera\\src\\components\\DishdetailComponent.js":"6","D:\\ReactProject\\coursera\\src\\components\\MainComponent.js":"7","D:\\ReactProject\\coursera\\src\\components\\HeaderComponent.js":"8","D:\\ReactProject\\coursera\\src\\components\\FooterComponent.js":"9","D:\\ReactProject\\coursera\\src\\components\\HomeComponent.js":"10","D:\\ReactProject\\coursera\\src\\components\\ContactComponent.js":"11","D:\\ReactProject\\coursera\\src\\shared\\dishesBeforSPApart.js":"12","D:\\ReactProject\\coursera\\src\\shared\\comments.js":"13","D:\\ReactProject\\coursera\\src\\shared\\leaders.js":"14","D:\\ReactProject\\coursera\\src\\shared\\promotions.js":"15","D:\\ReactProject\\coursera\\src\\components\\AboutComponent.js":"16","D:\\ReactProject\\coursera\\src\\redux\\configureStore.js":"17","D:\\ReactProject\\coursera\\src\\redux\\dishes.js":"18","D:\\ReactProject\\coursera\\src\\redux\\promotions.js":"19","D:\\ReactProject\\coursera\\src\\redux\\comments.js":"20","D:\\ReactProject\\coursera\\src\\redux\\leaders.js":"21","D:\\ReactProject\\coursera\\src\\redux\\ActionTypes.js":"22","D:\\ReactProject\\coursera\\src\\redux\\ActionCreators.js":"23","D:\\ReactProject\\coursera\\src\\components\\LoadingComponent.js":"24","D:\\ReactProject\\coursera\\src\\redux\\forms.js":"25"},{"size":640,"mtime":1607461729457,"results":"26","hashOfConfig":"27"},{"size":538,"mtime":1607901299683,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":2205,"mtime":1608283979482,"results":"30","hashOfConfig":"27"},{"size":1490,"mtime":1607859452623,"results":"31","hashOfConfig":"27"},{"size":8516,"mtime":1608283052198,"results":"32","hashOfConfig":"27"},{"size":3086,"mtime":1608286306972,"results":"33","hashOfConfig":"27"},{"size":5782,"mtime":1607896824085,"results":"34","hashOfConfig":"27"},{"size":2633,"mtime":1607461481860,"results":"35","hashOfConfig":"27"},{"size":1537,"mtime":1608283525211,"results":"36","hashOfConfig":"27"},{"size":11243,"mtime":1608286999340,"results":"37","hashOfConfig":"27"},{"size":6065,"mtime":1607540558403,"results":"38","hashOfConfig":"27"},{"size":4279,"mtime":1607540841684,"results":"39","hashOfConfig":"27"},{"size":2371,"mtime":1607888874610,"results":"40","hashOfConfig":"27"},{"size":445,"mtime":1607540847352,"results":"41","hashOfConfig":"27"},{"size":4712,"mtime":1607889162222,"results":"42","hashOfConfig":"27"},{"size":795,"mtime":1608286053241,"results":"43","hashOfConfig":"27"},{"size":649,"mtime":1608282089865,"results":"44","hashOfConfig":"27"},{"size":197,"mtime":1608199089337,"results":"45","hashOfConfig":"27"},{"size":453,"mtime":1608200511738,"results":"46","hashOfConfig":"27"},{"size":185,"mtime":1608199132688,"results":"47","hashOfConfig":"27"},{"size":182,"mtime":1608281019885,"results":"48","hashOfConfig":"27"},{"size":803,"mtime":1608281503671,"results":"49","hashOfConfig":"27"},{"size":254,"mtime":1608282330915,"results":"50","hashOfConfig":"27"},{"size":169,"mtime":1608285723112,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"wz93er",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\ReactProject\\coursera\\src\\index.js",[],["106","107"],"D:\\ReactProject\\coursera\\src\\App.js",[],"D:\\ReactProject\\coursera\\src\\reportWebVitals.js",[],"D:\\ReactProject\\coursera\\src\\components\\MenuComponent.js",[],"D:\\ReactProject\\coursera\\src\\shared\\dishes.js",[],["108","109"],"D:\\ReactProject\\coursera\\src\\components\\DishdetailComponent.js",["110","111","112"],"import React, { Component } from \"react\";\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalBody, ModalHeader, FormGroup, Label,\r\n    Row, Col\r\n} from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Errors, LocalForm } from \"react-redux-form\";\r\nimport { Loading } from './LoadingComponent';\r\n\r\n//receives value and checks if value is greater than 0\r\nconst required = (val) => (val) && (val.length >= 0);\r\n//receives lenth as a parameter and value. \r\n//This will check and make sure that entered length is below or above of specified length.\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\n\r\nconst RenderDish = ({ dish }) => {\r\n    console.log(\"renderDish\")\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card  >\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction RenderComments({ comments, addComment, dishId }) {\r\n    console.log(\"renderComments invoked\")\r\n\r\n    if (comments != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h3>Comments</h3>\r\n                <ul className=\"list-unstyled\">\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p> ^_^ {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                        )\r\n                    })}\r\n\r\n                </ul>\r\n                <CommentForm dishId={dishId} addComment={addComment} />\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment )\r\n        console.log(\"Current State is: \" + JSON.stringify(values))\r\n        //alert(\"Current State is: \" + JSON.stringify(values))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div >\r\n                        <Button outline onClick={this.toggleModal}\r\n                            type=\"submit\" color=\"primary\"\r\n                        > Submit Comment</Button>\r\n\r\n                        <Modal isOpen={this.state.isModalOpen}\r\n                            toggle={this.toggleModal}\r\n                        >\r\n\r\n                            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                            <ModalBody>\r\n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                                    <FormGroup>\r\n                                        <Label htmlFor=\"author\">Your Name</Label>\r\n                                        <Col md={13}>\r\n                                            <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                                placeholder=\"Your name\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                }} />\r\n\r\n                                            <Errors className=\"text-danger\" model=\".author\"\r\n                                                id=\"author\"\r\n                                                show=\"touched\" messages={{\r\n                                                    required: \"Required\",\r\n                                                    minLength: \"Must be greater than 3 characters\",\r\n                                                    maxLength: \"Must be 15 characters or less\"\r\n                                                }}\r\n                                            />\r\n\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n\r\n\r\n                                    <FormGroup>\r\n                                        <Label htmlFor=\"rating\">Rating</Label>\r\n                                        <Control.select model=\".contactType\" name=\"contactType\"\r\n                                            className=\"form-control\"\r\n                                        >\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                        </Control.select>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup className=\"form-group\">\r\n                                        <Label htmlFor=\"comment\" >Comment</Label>\r\n                                        <Col md={13}>\r\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                                rows=\"6\" className=\"form-control\" placeholder=\"Comment\"\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={{ size: 10 }}>\r\n                                            <Button type=\"submit\" color=\"primary\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </LocalForm>\r\n                            </ModalBody>\r\n\r\n                        </Modal>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    console.log(\"Dishdetail render invoked\")\r\n\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem>\r\n                            <Link to='/menu'>Menu</Link>\r\n                        </BreadcrumbItem>\r\n\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </Breadcrumb>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        addComment={props.addComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DishDetail;","D:\\ReactProject\\coursera\\src\\components\\MainComponent.js",[],"D:\\ReactProject\\coursera\\src\\components\\HeaderComponent.js",[],"D:\\ReactProject\\coursera\\src\\components\\FooterComponent.js",[],"D:\\ReactProject\\coursera\\src\\components\\HomeComponent.js",[],"D:\\ReactProject\\coursera\\src\\components\\ContactComponent.js",["113","114","115","116","117","118","119","120"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values))\r\n        alert(\"Current State is: \" + JSON.stringify(values))\r\n        this.props.resetFeedbackForm()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </Breadcrumb>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            FRANCE<br />\r\n                            <i className=\"fa fa-phone\"></i>: +33 07 66 198985<br />\r\n                            <i className=\"fa fa-fax\"></i>: +123456789<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href='tel: +77073156879' ><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href='skype: chingiz' ><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)} >\r\n                            <Row className=\"form-group\" >\r\n                                <Label htmlFor=\".firstname\" md={2} >First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2} >Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2} >Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Num\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(3), \r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2} >Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong> May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2} >Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\" className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","D:\\ReactProject\\coursera\\src\\shared\\dishesBeforSPApart.js",[],"D:\\ReactProject\\coursera\\src\\shared\\comments.js",[],"D:\\ReactProject\\coursera\\src\\shared\\leaders.js",[],"D:\\ReactProject\\coursera\\src\\shared\\promotions.js",[],"D:\\ReactProject\\coursera\\src\\components\\AboutComponent.js",[],"D:\\ReactProject\\coursera\\src\\redux\\configureStore.js",[],"D:\\ReactProject\\coursera\\src\\redux\\dishes.js",[],"D:\\ReactProject\\coursera\\src\\redux\\promotions.js",[],"D:\\ReactProject\\coursera\\src\\redux\\comments.js",[],"D:\\ReactProject\\coursera\\src\\redux\\leaders.js",[],"D:\\ReactProject\\coursera\\src\\redux\\ActionTypes.js",[],"D:\\ReactProject\\coursera\\src\\redux\\ActionCreators.js",[],"D:\\ReactProject\\coursera\\src\\components\\LoadingComponent.js",[],"D:\\ReactProject\\coursera\\src\\redux\\forms.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":110,"column":45,"nodeType":"129","endLine":115,"endColumn":54},{"ruleId":"127","severity":1,"message":"130","line":133,"column":41,"nodeType":"129","endLine":135,"endColumn":42},{"ruleId":"127","severity":1,"message":"131","line":146,"column":45,"nodeType":"129","endLine":148,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":4,"column":33,"nodeType":"134","messageId":"135","endLine":4,"endColumn":40},{"ruleId":"127","severity":1,"message":"128","line":79,"column":37,"nodeType":"129","endLine":85,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":102,"column":37,"nodeType":"129","endLine":108,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":127,"column":37,"nodeType":"129","endLine":136,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":155,"column":37,"nodeType":"129","endLine":162,"endColumn":39},{"ruleId":"127","severity":1,"message":"136","line":181,"column":45,"nodeType":"129","endLine":183,"endColumn":47},{"ruleId":"127","severity":1,"message":"130","line":190,"column":37,"nodeType":"129","endLine":192,"endColumn":38},{"ruleId":"127","severity":1,"message":"131","line":203,"column":37,"nodeType":"129","endLine":205,"endColumn":39},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]